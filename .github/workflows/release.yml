name: Release

on:
  release:
    types: [created]

jobs:
  generate-changelog:
    name: Generate Changelog
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Generate release changelog
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      
      - name: Update release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release - ${{ matrix.platform.os }}
    runs-on: ${{ matrix.platform.os }}
    needs: generate-changelog
    strategy:
      matrix:
        platform:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: rust-cli
            asset_name: rust-cli-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: rust-cli.exe
            asset_name: rust-cli-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: rust-cli
            asset_name: rust-cli-macos-amd64

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: Build release binary
        run: cargo build --verbose --release --target ${{ matrix.platform.target }}

      - name: Prepare asset for upload
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.asset_name }}.zip ${{ matrix.platform.binary_name }}
          else
            tar -czf ../../../${{ matrix.platform.asset_name }}.tar.gz ${{ matrix.platform.binary_name }}
          fi
          cd -

      - name: Upload release archive
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./${{ matrix.platform.asset_name }}.${{ matrix.platform.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_name: ${{ matrix.platform.asset_name }}.${{ matrix.platform.os == 'windows-latest' && 'zip' || 'tar.gz' }}
          asset_content_type: application/octet-stream 